// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`rubric rubric.buildTree should build tree based on spreadsheed processed data 1`] = `
Array [
  Object {
    "children": Array [],
    "id": "general",
    "order": 0,
    "skills": Array [
      Object {
        "category": "general",
        "core": true,
        "id": "completeness",
        "order": 0,
      },
    ],
  },
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "id": "cs",
        "order": 0,
        "parent": "frontEnd",
        "skills": Array [
          Object {
            "bc": 2,
            "category": "cs",
            "cc": 1,
            "core": true,
            "id": "logic",
            "order": 0,
          },
          Object {
            "bc": 3,
            "category": "cs",
            "cc": 2,
            "core": true,
            "id": "architecture",
            "order": 1,
          },
          Object {
            "bc": 2,
            "category": "cs",
            "cc": 1,
            "core": false,
            "id": "softwareDesign",
            "order": 2,
          },
        ],
      },
      Object {
        "children": Array [],
        "id": "scm",
        "order": 1,
        "parent": "frontEnd",
        "skills": Array [
          Object {
            "bc": 3,
            "category": "scm",
            "cc": 2,
            "core": true,
            "id": "git",
            "order": 0,
          },
          Object {
            "bc": 3,
            "category": "scm",
            "cc": 2,
            "core": false,
            "id": "github",
            "order": 1,
          },
        ],
      },
      Object {
        "children": Array [],
        "id": "js",
        "order": 2,
        "parent": "frontEnd",
        "skills": Array [
          Object {
            "bc": 3,
            "category": "js",
            "cc": 2,
            "core": true,
            "id": "jsStyle",
            "order": 0,
          },
          Object {
            "bc": 3,
            "category": "js",
            "cc": 3,
            "core": true,
            "id": "jsSemantics",
            "order": 1,
          },
          Object {
            "bc": 4,
            "category": "js",
            "cc": 2,
            "core": true,
            "id": "modularity",
            "order": 2,
          },
          Object {
            "bc": 3,
            "category": "js",
            "cc": 2,
            "core": false,
            "id": "dataStructures",
            "order": 3,
          },
          Object {
            "bc": 3,
            "category": "js",
            "cc": 2,
            "core": true,
            "id": "jsTesting",
            "order": 4,
          },
        ],
      },
      Object {
        "children": Array [],
        "id": "html",
        "order": 3,
        "parent": "frontEnd",
        "skills": Array [
          Object {
            "bc": 3,
            "category": "html",
            "cc": 3,
            "core": true,
            "id": "htmlValidation",
            "order": 0,
          },
          Object {
            "bc": 3,
            "category": "html",
            "cc": 3,
            "core": false,
            "id": "htmlStyle",
            "order": 1,
          },
          Object {
            "bc": 4,
            "category": "html",
            "cc": 2,
            "core": true,
            "id": "htmlSemantics",
            "order": 2,
          },
          Object {
            "bc": 4,
            "category": "html",
            "cc": 3,
            "core": true,
            "id": "cssDry",
            "order": 3,
          },
          Object {
            "bc": 4,
            "category": "html",
            "cc": 2,
            "core": true,
            "id": "cssResponsive",
            "order": 4,
          },
        ],
      },
    ],
    "id": "frontEnd",
    "order": 1,
    "skills": Array [],
  },
  Object {
    "children": Array [],
    "id": "ux",
    "order": 2,
    "skills": Array [
      Object {
        "bc": "TBD",
        "category": "ux",
        "cc": 3,
        "core": true,
        "id": "userCentricity",
        "order": 0,
      },
      Object {
        "bc": "TBD",
        "category": "ux",
        "cc": 2,
        "core": true,
        "id": "visualDesign",
        "order": 1,
      },
    ],
  },
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "id": "selfManagement",
        "order": 0,
        "parent": "soft",
        "skills": Array [
          Object {
            "bc": 4,
            "category": "selfManagement",
            "cc": 2,
            "core": true,
            "id": "softPlanning",
            "order": 0,
          },
          Object {
            "bc": 4,
            "category": "selfManagement",
            "cc": 2,
            "core": true,
            "id": "selfLearning",
            "order": 1,
          },
          Object {
            "bc": 4,
            "category": "selfManagement",
            "cc": 2,
            "core": true,
            "id": "presentations",
            "order": 2,
          },
          Object {
            "bc": 4,
            "category": "selfManagement",
            "cc": 2,
            "core": true,
            "id": "adaptability",
            "order": 3,
          },
          Object {
            "bc": 4,
            "category": "selfManagement",
            "cc": 2,
            "core": true,
            "id": "problemSolving",
            "order": 4,
          },
        ],
      },
      Object {
        "children": Array [],
        "id": "interpersonalRelationships",
        "order": 1,
        "parent": "soft",
        "skills": Array [
          Object {
            "bc": 4,
            "category": "interpersonalRelationships",
            "cc": 2,
            "core": true,
            "id": "teamWork",
            "order": 0,
          },
          Object {
            "bc": 4,
            "category": "interpersonalRelationships",
            "cc": 2,
            "core": true,
            "id": "responsibility",
            "order": 1,
          },
          Object {
            "bc": 4,
            "category": "interpersonalRelationships",
            "cc": 2,
            "core": true,
            "id": "feedback",
            "order": 2,
          },
          Object {
            "bc": 4,
            "category": "interpersonalRelationships",
            "cc": 2,
            "core": true,
            "id": "communication",
            "order": 3,
          },
        ],
      },
    ],
    "id": "soft",
    "order": 3,
    "skills": Array [],
  },
]
`;

exports[`rubric rubric.buildTreeWithLocale should build tree including localized texts 1`] = `
Array [
  Object {
    "children": Array [],
    "id": "general",
    "order": 0,
    "skills": Array [
      Object {
        "category": "general",
        "core": true,
        "description": "Grado de completitud del proyecto o reto dependiendo de especificaciones/requerimientos de cada uno.",
        "id": "completeness",
        "levels": Array [
          "<50%",
          "50%",
          "80%",
          "100%",
          ">100%",
        ],
        "order": 0,
        "title": "Completitud",
      },
    ],
    "title": "General",
  },
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "id": "cs",
        "order": 0,
        "parent": "frontEnd",
        "skills": Array [
          Object {
            "bc": 2,
            "category": "cs",
            "cc": 1,
            "core": true,
            "description": "Capacidad de expresión lógica, abstracción, síntesis, conocimiento de algoritmos y complejidad asintótica.",
            "id": "logic",
            "levels": Array [
              "Lógica poco clara, verbose, contiene código muerto.",
              "Lógica clara y correcta, pero verbose y resulta en más operaciones de las necesarias. Sin código muerto.",
              "Lógica correcta. Identifica y evita repetición. Abstrae/reusa lógica. DRY",
              "Lógica correcta, expresiva y óptima (o aceptable en términos de complejdad asintótica).",
              "Demuestra conocimiento de algoritmos comunes. Implementa soluciones de complejidad óptima.",
            ],
            "order": 0,
            "title": "Lógica / Algoritmia",
          },
          Object {
            "bc": 3,
            "category": "cs",
            "cc": 2,
            "core": true,
            "description": "Organización general de los componentes que conforman una aplicación o sistema (archivos, carpetas, código, integración, herramientas, despliegue, ...)",
            "id": "architecture",
            "levels": Array [
              "Código no está organizado de ninguna manera en particular, no separa responsabilidades y no implementa ningun patrón o convención.",
              "Demuestra separación entre presentación, lógica y data (archivos, módulos, funciones, ...).",
              "Demuestra separación entre estado y vistas, además de otras \\"responsabilidades\\" como hacer peticiones de red o procesar data. Demuestra haber considerado mantenibilidad.",
              "Separación entre estado, vistas, acciones con claros patrones de reuso. Demuestra haber investigado y evaluado más de una opción a nivel de arquitectura y selección de herramientas.",
              "Demuestra haber tenido en cuenta la arquitectura completa de una aplicación (front-end y back-end), incluyendo escalabilidad, continuous integration, continuous deployment.",
            ],
            "order": 1,
            "title": "Arquitectura",
          },
          Object {
            "bc": 2,
            "category": "cs",
            "cc": 1,
            "core": false,
            "description": "Implementa y diseña haciendo uso de convenciones, patrones de diseño y conocimiento de los paradigmas de programación predominantes (procedural/oop/funcional).",
            "id": "softwareDesign",
            "levels": Array [
              "Código no sigue ninguna convención o patrón común. La implementación es ad-hoc e imperativa.",
              "Demuestra uso de convenciones de JavaScript idiomático. Implementación predominantemente procedural.",
              "Es consciente de la diferencia entre estilos imperativos y declarativos, pero todavía no hay una dirección clara en la implementación.",
              "Demuestra soltura pasando de un estilo/paradigma a otro (por ejemplo reemplazando iteración con recursión o abstrayendo control de flujo, ...).",
              "Demuestra soltura y profundidad con diferentes convenciones y paradigmas (imperativo/declarativo, oop/funcional). Se adapta a paradigma sin problema. Entiende los principios de cada paradigma así como sus \\"vocabularios\\".",
            ],
            "order": 2,
            "title": "Patrones/Paradigmas",
          },
        ],
        "title": "Computer Science (CS)",
      },
      Object {
        "children": Array [],
        "id": "scm",
        "order": 1,
        "parent": "frontEnd",
        "skills": Array [
          Object {
            "bc": 3,
            "category": "scm",
            "cc": 2,
            "core": true,
            "description": "Manejo/admistración de código fuente (versiones).",
            "id": "git",
            "levels": Array [
              "Uso básico de git (clone, commit, push, pull). Usa .gitignore y configura usuario (email, username).",
              "Escribe mensajes de log informativos. Organiza sets de cambios de forma lógica.",
              "Demuestra familiaridad con manejo de ramas, enviando, revisando e integrando (merging) pull requests.",
              "Branches/Tags. Usa \\"feature branches\\", \\"release branches\\", \\"develop branch\\", ...siguiendo un flujo de tipo Git Flow y tags para releases.",
              "Demuestra un nivel avanzado de resolución de conflictos, manejo de historia de un projecto, rebase, squash, ...",
            ],
            "order": 0,
            "title": "Git",
          },
          Object {
            "bc": 3,
            "category": "scm",
            "cc": 2,
            "core": false,
            "description": "Colaboración en GitHub",
            "id": "github",
            "levels": Array [
              "Usa un servicio remoto para alojar sus repositorios. Usa GitHub pages o similar para desplegar sitios estáticos. Está familiarizada con los issues.",
              "Usa issues para reportar problemas, sugerir features, hacer preguntas, ... Organiza issues en milestones, usa labels, asigna issues, ...",
              "Hace code review (aprueba, rechaza, comentarios, ...). Integra cambios entre forks/ramas.",
              "Resuelve y/o previene conflictos. Usa sistema de releases de GitHub (en conjunción con los tags de git).",
              "Usa Continuos integration (ie: Travis, Coveralls, ...) para correr tests de forma automatizada.",
            ],
            "order": 1,
            "title": "GitHub",
          },
        ],
        "title": "Source Code Management (SCM)",
      },
      Object {
        "children": Array [],
        "id": "js",
        "order": 2,
        "parent": "frontEnd",
        "skills": Array [
          Object {
            "bc": 3,
            "category": "js",
            "cc": 2,
            "core": true,
            "description": "Conoce y usa guías de estilo.",
            "id": "jsStyle",
            "levels": Array [
              "No sigue un estilo específico. Falta linter (o lo ignora).",
              "Incluye linter y configuración, pero implementación no pasa. Contiene múltiples errores y warnings (más de 10).",
              "Incluye linter. Implementación \\"casi\\" pasa (entre 1 y 10 errores). Sigue estilos en líneas generales pero todavía contiene algunos errores y warnings.",
              "Incluye linter. Implementación pasa. Sigue estilos. Sin errores de linter (todavía algunos warnings).",
              "Incluye linter, demuestra haber evaluado y elegido configuración de linter. Implementación pasa limpia.",
            ],
            "order": 0,
            "title": "Estilo (linter js)",
          },
          Object {
            "bc": 3,
            "category": "js",
            "cc": 3,
            "core": true,
            "description": "Uso de identificadores con semántica y siguiendo convenciones.",
            "id": "jsSemantics",
            "levels": Array [
              "No usa identificadores descriptivos.",
              "Usa identificadores descriptivos, pero de forma inconsitente. Algunos nombres son crípticos o inconsistentes.",
              "Usa nombres de identificadores (variables, funciones, archivos, carpetas, ...) descriptivos.",
              "Todo lo anterior, y además usa identificadores en inglés (correctamente).",
              "Propone y articula una semántica consistente y efectiva para describir los componentes de la aplicación y sus interacciones.",
            ],
            "order": 1,
            "title": "Nomenclatura / semántica",
          },
          Object {
            "bc": 4,
            "category": "js",
            "cc": 2,
            "core": true,
            "description": "Organiza y divide su código en unidades lógicas con superficies de contacto y responsabilidades claras.",
            "id": "modularity",
            "levels": Array [
              "Organiza su código en funciones, unidades lógicas",
              "Organiza su código en archivos, carpetas y funciones dividiendo responsabilidades.",
              "Organiza su código en funciones y objetos con dependencias claras/explícitas, aisladas y orientadas a ser testeadas.",
              "Divide su código en \\"módulos\\" y usa un bundler para importar/exportar.",
              "Diseña interfaces minimizando superficie de contacto. Usa sistemas de módulos tanto CommonJS como módulos de ES6",
            ],
            "order": 2,
            "title": "Uso de funciones / modularidad",
          },
          Object {
            "bc": 3,
            "category": "js",
            "cc": 2,
            "core": false,
            "description": "Uso de estructuras de datos para representar y solucionar problemas.",
            "id": "dataStructures",
            "levels": Array [
              "No organiza la data como representación de estado y relaciones.",
              "Utiliza objetos y arreglos para agrupar data. Demuestra un nivel mínimo de \\"modelado\\" de datos.",
              "Usa objetos y arreglos de forma avanzada (idiomática) y conoce patrones para recorrer estructuras y manipularlas.",
              "Hace uso de estructuras complejas como sets, maps, árboles, pilas, colas, ...",
              "Implementa sus propias estructuras de datos basadas en patrones conocidos.",
            ],
            "order": 3,
            "title": "Estructuras de datos",
          },
          Object {
            "bc": 3,
            "category": "js",
            "cc": 2,
            "core": true,
            "description": "Desarrollo orientado a pruebas, cobertura, mantenibilidad.",
            "id": "jsTesting",
            "levels": Array [
              "No demuestra enfoque orientado a tests. Código no testeable.",
              "Demuestra un mínimo de orientación hacia tests, pero sólo una pequeña parte del código es testeable y/o incluye tests.",
              "Aplica TDD como concepto. Imagina el flujo del usuario en la interacción con el programa. Posibles usos y errores al usar el programa.",
              "Demuestra código orientado a tests, coverage alto, incluye casos de error.",
              "Test suite comprensiva. Múltiples entornos. Automatizado.",
            ],
            "order": 4,
            "title": "Tests",
          },
        ],
        "title": "JavaScript",
      },
      Object {
        "children": Array [],
        "id": "html",
        "order": 3,
        "parent": "frontEnd",
        "skills": Array [
          Object {
            "bc": 3,
            "category": "html",
            "cc": 3,
            "core": true,
            "description": "Pasa o no validador de HTML: https://validator.w3.org/",
            "id": "htmlValidation",
            "levels": Array [
              ">10 errores",
              "Entre 4 y 10 errores.",
              "Entre 1 y 3 errores.",
              "0 errores, <10 warnings",
              "0 errores, 0 warnings",
            ],
            "order": 0,
            "title": "Correctitud / Validación",
          },
          Object {
            "bc": 3,
            "category": "html",
            "cc": 3,
            "core": false,
            "description": "HTMLHint Ver: https://github.com/yaniswang/HTMLHint",
            "id": "htmlStyle",
            "levels": Array [
              ">10 errores",
              "Entre 4 y 10 errores.",
              "Entre 1 y 3 errores.",
              "0 errores, <10 warnings",
              "0 errores, 0 warnings",
            ],
            "order": 1,
            "title": "Estilo (linter html)",
          },
          Object {
            "bc": 4,
            "category": "html",
            "cc": 2,
            "core": true,
            "description": "Arquitectura de información: Cómo se organiza la información para que esta tenga un sentido lógico.",
            "id": "htmlSemantics",
            "levels": Array [
              "Markup no refleja semántica",
              "Markup refleja semántica y arquitectura de información, pero todavía con insconsistencias.",
              "Uso de HTML semántico.",
              "Hace uso semántico con HTML5",
              "Arquitectura ideal. Sin estilos se debe entender todo el contenido (arquitectura), y semántica de marcado.",
            ],
            "order": 2,
            "title": "Semántica / Arquitectura de información",
          },
          Object {
            "bc": 4,
            "category": "html",
            "cc": 3,
            "core": true,
            "description": "Abstracción, reuso y jerarquía de estilos.",
            "id": "cssDry",
            "levels": Array [
              "Estilos inline... omg!",
              "Contiene estilos duplicados/redundantes.",
              "Abstrae y reusa estilos a través de clases.",
              "Hace buen uso de estilos en cascada para reusar estilos de forma jerérquica.",
              "Usa herramientas de pre-procesado de CSS o estilos con JavaScript para mayor flexibilidad y escalabilidad de estilos.",
            ],
            "order": 3,
            "title": "DRY (CSS)",
          },
          Object {
            "bc": 4,
            "category": "html",
            "cc": 2,
            "core": true,
            "description": "Diseño adaptable a diferentes dispositivos (desktop, mobile, tablet, ...)",
            "id": "cssResponsive",
            "levels": Array [
              "No es responsive",
              "Responsive con issues",
              "Responsive",
              "Mobile first",
              "Progressive web app",
            ],
            "order": 4,
            "title": "Responsive Web Design",
          },
        ],
        "title": "HTML/CSS",
      },
    ],
    "id": "frontEnd",
    "order": 1,
    "skills": Array [],
    "title": "Habilidades Técnicas (Front-end)",
  },
  Object {
    "children": Array [],
    "id": "ux",
    "order": 2,
    "skills": Array [
      Object {
        "bc": "TBD",
        "category": "ux",
        "cc": 3,
        "core": true,
        "description": "Capacidad para poder crear productos pensando y entendiendo a los usuarios finales.",
        "id": "userCentricity",
        "levels": Array [
          "Diseña el producto basado en su propia experiencia - \\"self-driven design\\". No entiende ni tiene en cuenta al usuario.",
          "Conoce sobre UX y sabe que el usuario es importante. Reflexiona sobre los objetivos del usuario y del producto, pero no \\"sale a la calle\\" (no se acerca al usuario). Los usuarios a quienes entrevista o con quienes realiza prueba no son un reflejo de su público objetivo.",
          "Se enfoca en la investigación. Entiende al usuario a través de la investigación, realiza entrevistas, observación y testings con usuarios de su público objetivo.",
          "Toma en cuenta al usuario en todo el proceso de diseño desde research hasta testing. Estos usuarios son parte  del público objetivo del producto en el cuál trabaja.",
          "Toma en cuenta al usuario en todo el proceso de diseño desde research hasta testing, y los incluye al momento de definir los KPIs de su producto.",
        ],
        "order": 0,
        "title": "User centricity",
      },
      Object {
        "bc": "TBD",
        "category": "ux",
        "cc": 2,
        "core": true,
        "description": "Pone en práctica los principios de diseño visual en los componentes de su producto y en la relación de estos con los otros componentes. El diseño propuesto como un todo se entiende de manera clara.",
        "id": "visualDesign",
        "levels": Array [
          "No entiende ni aplica los principios de visual design.",
          "Entiende que hay conceptos como: contraste, alineación, jerarquía, tipografía y color para crear composiciones. Si bien no las aplica todas, pero se ve un esfuerzo por implementar algunos.",
          "Aplica la mayoría de conceptos de manera adecuada por separado. Y en conjunto algunos puede que no tengan 100% armonía, pero se ve el fuerte trabajo por seguirlos y aplicarlos casi en su totalidad. La página se percibe fuertemente homogenea en estilos.",
          "Pueden criticar una interfaz basándose en los fundamentos de diseño visual y en buenas prácticas. Construye interfaces utilizando como base una librería de componentes o guía de estilo siguiendo, también, las mejores prácticas de diseño visual, usabilidad y accesibilidad.",
          "Entiende y pone en práctica las mejores prácticas de Visual Design. Implementa las normas básicas de accesibilidad y las heurísticas usabilidad.",
        ],
        "order": 1,
        "title": "Visual Design",
      },
    ],
    "title": "Habilidades Técnicas (UX)",
  },
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "id": "selfManagement",
        "order": 0,
        "parent": "soft",
        "skills": Array [
          Object {
            "bc": 4,
            "category": "selfManagement",
            "cc": 2,
            "core": true,
            "description": "Planifica y organiza el trabajo de manera priorizada, incremental e iterativa, aprovechando su tiempo y utilizando herramientas que la ayuden a lograrlo. Demuestra tener un prototyping mindset.",
            "id": "softPlanning",
            "levels": Array [
              "No planifica y/o no gestiona su tiempo",
              "Logra organizarse de manera general, sin un plan específico, haciendo una estimación muy general del tiempo.

Conoce las ceremonias y artefactos ágiles (sprint planning, dailys, retrospectiva, tablero al menos, etc) pero los omite y/o no las utiliza de manera adecuada.",
              "Escribe como historias de usuario y las prioriza en función del valor de negocio/usuario y de las dependencias entre sí.

Escribe definiciones de terminado para cada historia de usuario del product backlog.

Cumple, casi siempre, con las ceremonias y mantiene su tablero actualizado.

No pierde tiempo en tareas con menor relevancia para el produto/usuario.",
              "Escribe como historias de usuario y las prioriza en función del valor de negocio/usuario y de las dependencias entre sí.

Escribe definiciones de terminado para  cada historia de usuario  del product backlog.

Cumple siempre con las ceremonias y con mantener su tablero actualizado.

No pierde tiempo en tareas con menor relevancia para el produto/usuario, logrando gestionar su tiempo.

Hace estimaciones en \\"puntos\\" usando como referencia otras tareas ya conocidas (\\"planning poker\\").",
              "Escribe como historias de usuario y las prioriza en función del valor de negocio/usuario y de las dependencias entre sí.

Escribe definiciones de terminado para  cada historia de usuario  del product backlog.

Cumple siempre con las ceremonias y con mantener su tablero actualizado.

No pierde tiempo en tareas con menor relevancia para el produto/usuario, logrando gestionar su tiempo.

Hace estimaciones con precisión y, por  lo tanto, planificar \\"releases\\" o entregas parciales con comodidad.",
            ],
            "order": 0,
            "title": "Planificación, organización y manejo del tiempo",
          },
          Object {
            "bc": 4,
            "category": "selfManagement",
            "cc": 2,
            "core": true,
            "description": "Tiene interés en adquirir nuevos conocimientos de manera autónoma, encuentra los medios para hacerlo, y lo intenta hasta lograrlo.",
            "id": "selfLearning",
            "levels": Array [
              "No demuestra adquiere conocimientos de manera autónoma, no realiza preguntas sobre el material, ni busca aclarar conceptos.",
              "Demuestra interés en adquirir conocimientos autónomamente, estudiando de manera independiente, lo que se puede reflejar en que cuando es necesario busca aclarar conceptos y resolver dudas sobre la materia.",
              "Adquiere de forma constante conocimientos de manera independiente y responsable. Pide referencia de materiales que pueden ser de utilidad para su aprendizaje. Además, cuando es necesario, realiza preguntas sobre la materia. Busca resolver dudas sobre temáticas más allá de las vistas en clase.",
              "Adquiere de forma constante conocimientos de manera independiente y responsable. Es capaz de identificar por su cuenta herramientas que necesita aprender o también reforzar. Pide referencia de materiales que pueden ser de utilidad para su aprendizaje. Además, cuando es necesario, realiza preguntas sobre la materia. Busca resolver dudas sobre temáticas más allá de las vistas en clase.",
              "Adquiere de forma constante conocimientos de manera independiente y responsable. Es capaz de identificar por su cuenta herramientas que necesita aprender o también reforzar. Pide referencia de materiales que pueden ser de utilidad para su aprendizaje. Además, cuando es necesario, realiza preguntas sobre la materia. Busca resolver dudas sobre temáticas más allá de las vistas en clase. Le agregan a sus proyectos herramientas fuera de lo visto en clase o lo pedido y que le agregaran valor al producto.",
            ],
            "order": 1,
            "title": "Autoaprendizaje",
          },
          Object {
            "bc": 4,
            "category": "selfManagement",
            "cc": 2,
            "core": true,
            "description": "Usar estrategias apropiadas para hablar en público, incluida la interacción con medios de presentación, como es el demo, para asegurar el entendimiento de la audiencia y la mejor forma de presentar el proyecto.",
            "id": "presentations",
            "levels": Array [
              "No logra presentar el demo según requisitos del reto: no se ve bien, no se abre el link pedido, solo se ve en su computador local, etc. y/o No realiza contacto visual y el volumen de voz es bajo o utiliza un ritmo no adecuado, lo que hace difícil entender el contenido de la presentación.",
              "Cualquier persona puede acceder al demo desde cualquier equipo. Habla con un tono y ritmo adecuado pero no realiza contacto visual o realiza contacto visual con la audiencia pero habla en un volumen bajo o en un ritmo no adecuado, lo que dificulta el entendimiento de la presentación.",
              "Cualquier persona puede acceder al demo desde cualquier equipo. El demo se ve y funciona correctamente, logrando priorizar qué mostrar en el demo -pudiendo enseñar algunas veces menos elementos pero funcionales-. Realiza algún contacto visual con la audiencia, se apropia del espacio físico y habla con un volumen y ritmo que no interfieren con el entendimiento de la audiencia.",
              "Cualquier persona puede acceder al demo desde cualquier equipo. El demo se ve y funciona correctamente, teniendo al menos una funcionalidad principal que está perfecta y pequeñas funcionalidades anexas que funcionan correctamente. Realiza contacto visual regular con la audiencia, se apropia del espacio físico y habla con un volumen y ritmo que no interfieren con el entendimiento de la audiencia, e incluso capta su atención.",
              "Cualquier persona puede acceder al demo desde cualquier equipo. El demo se ve y funciona correctamente, teniendo una funcionalidad principal y varias sub funcionalidades que están perfectas. Además eligen el mejor medio para mostrar el demo. Realiza contacto visual regular con la audiencia, se apropia adecuadamente del espacio físico y habla con un volumen y ritmo que propician el entendimiento de la audiencia y capta su atención.",
            ],
            "order": 2,
            "title": "Presentaciones",
          },
          Object {
            "bc": 4,
            "category": "selfManagement",
            "cc": 2,
            "core": true,
            "description": "Se adapta a situaciones nuevas con actitud positiva. Lidia con la incertidumbre proponiendo soluciones creativas y cambia de estrategia cuando se necesita. Asume retos, afronta cambios repentinos, se adecua a trabajar con nuevos equipos, etc",
            "id": "adaptability",
            "levels": Array [
              "Ante cambios o nuevos desafíos se adapta pero no mantiene una actitud positiva/ No logra adaptarse ante situaciones nuevas o a la incertidumbre.",
              "Ante cambios o nuevos desafíos los recibe con una actitud positiva, pero no necesariamente logra accionarlos o adaptarse de la mejor manera, es decir, no planifica nuevamente o no puede integrar los cambios en lo planificado.",
              "Ante cambios inesperados o nuevos desafios los recibe con una actitud positiva, se adapta y logra proponer soluciones creativas para encontrar una nueva estrategia. De esta manera, logra asumir retos, enfrenta los cambios repentinos, como trabajar con nuevos equipos o cambios en el proyecto.",
              "Navega ante la incertidumbre, siendo capaz de reconocer y alimentar la incomodidad de no saber, y luego idear tácticas para salir de ella cuando sea necesario. Ante cambios inesperados o nuevos desafios los recibe con una actitud positiva, se adapta y logra proponer soluciones creativas para encontrar una nueva estrategia. Logra asumir retos, enfrenta los cambios repentinos, como trabajar con nuevos equipos o cambios en el proyecto. Logra realizar un analisis \\"post mortem\\" o retrospectiva, donde logra ver que es lo que salío mal e identifica posibles mejores",
              "Navega ante la incertidumbre, siendo capaz de reconocer y alimentar la incomodidad de no saber, y luego idear tácticas para salir de ella cuando sea necesario. Ante cambios inesperados o nuevos desafios los recibe con una actitud positiva, se adapta y logra proponer soluciones creativas para encontrar una nueva estrategia. Logra asumir retos, enfrenta los cambios repentinos, como trabajar con nuevos equipos o cambios en el proyecto.  Realizar un analisis \\"post mortem\\"; ve lo que salío mal e identificar posibles mejores. Además, realiza un análisis \\"pre-mortem\\", asume que puede pasar algo inesperado y lo maneja de la mejor forma posible, cambiando su función para estar alineada con los requisitos del entorno (proyecto, salón de clases, etc).",
            ],
            "order": 3,
            "title": "Adaptabilidad",
          },
          Object {
            "bc": 4,
            "category": "selfManagement",
            "cc": 2,
            "core": true,
            "description": "Tiene la disposición de buscar y encontrar soluciones a problemas de diversa complejidad y naturaleza, evitando quedarse estancada y apoyando a su equipo en el camino.",
            "id": "problemSolving",
            "levels": Array [
              "No intenta buscar alternativas ante problemas que se presentan.",
              "Busca soluciones alternativas a problemas de mediana complejidad. Depende de otros para comenzar a resolver un problema.",
              "Comienza a aplicar su propia creatividad para resolver problemas independentiemente. Busca soluciones alternativas a problemas de diversa complejidad, a pesar de que no todas las soluciones puedan ser correctas, consulta distintas fuentes para resolver el problema.",
              "Busca soluciones alternativas utilizando su propia creatividad para resolver problemas de diversa complejidad y naturaleza. Al consultar diferentes fuentes y no encontrar una solución, recurre a los demás para encontrar una forma de resolver el problema o también busca soluciones a través de experimentación e iteracíon -busca \\"salir del edificio\\" como una herramienta para \\"resolver\\" el problema-.",
              "Busca soluciones alternativas utilizando su propia creatividad para resolver problemas de diversa complejidad y naturaleza. Logra pedir ayuda a tiempo y recurre a los demás para encontrar una forma de resolver el problema de manera colaborativa. Demuestra experimentación e iteración dentro del proceso de solución de problemas. No solo experimenta con el problema, si no también piensa criticamente sobre él - es decir, cuestiona como se conecta \\"x problema\\" a otros y encuentra soluciones, nuevos procesos, técnicas, etc. Para poder resolver un grupo entero de \\"problemas,\\" influye a los demás y trabaja en equipo para lograrlo.",
            ],
            "order": 4,
            "title": "Solución de problemas",
          },
        ],
        "title": "Habilidades de Autogestión",
      },
      Object {
        "children": Array [],
        "id": "interpersonalRelationships",
        "order": 1,
        "parent": "soft",
        "skills": Array [
          Object {
            "bc": 4,
            "category": "interpersonalRelationships",
            "cc": 2,
            "core": true,
            "description": "Trabajo en equipo: ofrece ayuda a sus compañeras, coordina sus actividades con su grupo y trabaja por el objetivo común de su equipo",
            "id": "teamWork",
            "levels": Array [
              "No trabaja colaborativamente",
              "Trabaja de manera colaborativa con el equipo.",
              "Trabaja de manera colaborativa y contribuye al objetivo común, entregando ideas para la construcción del proyecto.",
              "Trabaja de manera colaborativa y contribuye al objetivo común, entregando ideas para la construcción del producto, respetando siempre el trabajo de sus compañeras.",
              "Trabaja de manera colaborativa y contribuye al objetivo común, entregando ideas para la construcción del producto, respetando siempre el trabajo de sus compañeras.                                                                                                                                                                                                                              Se preocupa del proceso de aprendizaje del equipo, generando un ambiente colaborativo entre sus compañeras. Por ejemplo. ofrece ayuda a sus compañeras, hace preguntas a sus compañeras respecto a su proceso, anima a su grupo, etc.",
            ],
            "order": 0,
            "title": "Trabajo en equipo",
          },
          Object {
            "bc": 4,
            "category": "interpersonalRelationships",
            "cc": 2,
            "core": true,
            "description": "Responsabilidad: cumple con entregar su trabajo a tiempo y ayuda a los demás con lo que tengan pendiente.",
            "id": "responsibility",
            "levels": Array [
              "No cumple con sus responsabilidades o si las cumple es fuera del tiempo acordado",
              "Entrega su trabajo a tiempo",
              "Entrega su trabajo a tiempo y colabora con el objetivo final del trabajo, con el fin de entregar un producto de calidad.",
              "Entrega su trabajo a tiempo y colabora con el objetivo final del trabajo, ayudando a los demás con los pendientes, con el fin de entregar un producto de calidad.",
              "Entrega su trabajo a tiempo y colabora con el objetivo del trabajo, ayudando a los demás con los pendientes, con el fin de entregar un producto de calidad. Encuentra alternativas de acción cuando es necesario, para llegar con el producto a tiempo.",
            ],
            "order": 1,
            "title": "Responsabilidad",
          },
          Object {
            "bc": 4,
            "category": "interpersonalRelationships",
            "cc": 2,
            "core": true,
            "description": "Escucha y valora los comentarios y críticas de los demás, rescatando los aspectos que la ayuden a incorporar mejoras. Da su opinión de manera fundamentada, constructiva y coherente. Promueve sesiones de feedback con su equipo, aporta puntual y objetivamente en retrospectivas. Code review (hace y recibe)",
            "id": "feedback",
            "levels": Array [
              "No escucha o rechaza los comentarios y criticas de los demás, y/o no entrega su opinión o si lo hace no es de manera constructiva.",
              "Escucha los comentarios y críticas de los demás de manera respetuosa, pero no logra accionar el feedback. y/o entrega a los demás su opinión de forma constructiva, pero no necesariamente resulta útil para los otros.",
              "Escucha y valora los comentarios y críticas de los demás, rescatando aspectos que le sirvan para su mejora. Además, entrega su opinión a los demás de forma constructiva, fundamentada y coherente con el fin de ayudar a los demás.",
              "Escucha y valora los comentarios y críticas de los demás, rescatando aspectos que le sirvan para su mejora. Además, busca instancias de feedback o peer review, entregando su opinión a los demás de forma constructiva, fundamentada y coherente con el fin de ayudar a los otros. Reconoce que el feedback es un regalo, por lo tanto es honesto, empático e inmediato.",
              "Escucha y valora los comentarios y críticas de los demás, rescatando aspectos que le sirvan para su mejora. Logra gestionar el feedback y realizar acciones para el cambio. Además, entrega su opinión a los demás de forma constructiva, fundamentada y coherente. Reconoce que el feedback es un regalo, por lo tanto es honesto, empático e inmediato. Participa de retrospectivas, feedbacks y peer review de forma constante, aportando de manera puntual y objetiva, generando un aporte positivo para su entorno de trabajo.",
            ],
            "order": 2,
            "title": "Dar y recibir feedback",
          },
          Object {
            "bc": 4,
            "category": "interpersonalRelationships",
            "cc": 2,
            "core": true,
            "description": "Tiene capacidad de síntesis y articular sus ideas con claridad. Entiende a su audiencia y logra que se entienda lo que quiere comunicar facilitando el diálogo.",
            "id": "communication",
            "levels": Array [
              "No logra comunicar de manera eficaz, ya sea porque no logra comunicar sus ideas o si las comunica no lo hace de manera clara",
              "Logra comunicar sus ideas a los demás cuando es necesario, pero no fomenta instancias de comunicación",
              "Logra comunicar sus ideas a los demás, teniendo capacidad de síntesis y articulando sus ideas con claridad.",
              "Logra comunicar sus ideas a los demás, teniendo capacidad de síntesis y articulando sus ideas con claridad. Entiende a su audiencia o equipo y logra que se entienda lo que quiere comunicar facilitando el diálogo",
              "Logra comunicar sus ideas a los demás, teniendo capacidad de síntesis y articulando sus ideas con claridad. Entiende a su audiencia o equipo y logra que se entienda lo que quiere comunicar facilitando el diálogo. Además, mantiene una comunicación constante y fluida con el resto, facilitando el trabajo y las relaciones en este.",
            ],
            "order": 3,
            "title": "Comunicación eficaz",
          },
        ],
        "title": "Habilidades para relaciones interpersonales",
      },
    ],
    "id": "soft",
    "order": 3,
    "skills": Array [],
    "title": "Habilidades Blandas (Soft Skills)",
  },
]
`;

exports[`rubric rubric.buildTreeWithLocale should use spanish as default language 1`] = `
Array [
  Object {
    "children": Array [],
    "id": "general",
    "order": 0,
    "skills": Array [
      Object {
        "category": "general",
        "core": true,
        "description": "Grado de completitud del proyecto o reto dependiendo de especificaciones/requerimientos de cada uno.",
        "id": "completeness",
        "levels": Array [
          "<50%",
          "50%",
          "80%",
          "100%",
          ">100%",
        ],
        "order": 0,
        "title": "Completitud",
      },
    ],
    "title": "General",
  },
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "id": "cs",
        "order": 0,
        "parent": "frontEnd",
        "skills": Array [
          Object {
            "bc": 2,
            "category": "cs",
            "cc": 1,
            "core": true,
            "description": "Capacidad de expresión lógica, abstracción, síntesis, conocimiento de algoritmos y complejidad asintótica.",
            "id": "logic",
            "levels": Array [
              "Lógica poco clara, verbose, contiene código muerto.",
              "Lógica clara y correcta, pero verbose y resulta en más operaciones de las necesarias. Sin código muerto.",
              "Lógica correcta. Identifica y evita repetición. Abstrae/reusa lógica. DRY",
              "Lógica correcta, expresiva y óptima (o aceptable en términos de complejdad asintótica).",
              "Demuestra conocimiento de algoritmos comunes. Implementa soluciones de complejidad óptima.",
            ],
            "order": 0,
            "title": "Lógica / Algoritmia",
          },
          Object {
            "bc": 3,
            "category": "cs",
            "cc": 2,
            "core": true,
            "description": "Organización general de los componentes que conforman una aplicación o sistema (archivos, carpetas, código, integración, herramientas, despliegue, ...)",
            "id": "architecture",
            "levels": Array [
              "Código no está organizado de ninguna manera en particular, no separa responsabilidades y no implementa ningun patrón o convención.",
              "Demuestra separación entre presentación, lógica y data (archivos, módulos, funciones, ...).",
              "Demuestra separación entre estado y vistas, además de otras \\"responsabilidades\\" como hacer peticiones de red o procesar data. Demuestra haber considerado mantenibilidad.",
              "Separación entre estado, vistas, acciones con claros patrones de reuso. Demuestra haber investigado y evaluado más de una opción a nivel de arquitectura y selección de herramientas.",
              "Demuestra haber tenido en cuenta la arquitectura completa de una aplicación (front-end y back-end), incluyendo escalabilidad, continuous integration, continuous deployment.",
            ],
            "order": 1,
            "title": "Arquitectura",
          },
          Object {
            "bc": 2,
            "category": "cs",
            "cc": 1,
            "core": false,
            "description": "Implementa y diseña haciendo uso de convenciones, patrones de diseño y conocimiento de los paradigmas de programación predominantes (procedural/oop/funcional).",
            "id": "softwareDesign",
            "levels": Array [
              "Código no sigue ninguna convención o patrón común. La implementación es ad-hoc e imperativa.",
              "Demuestra uso de convenciones de JavaScript idiomático. Implementación predominantemente procedural.",
              "Es consciente de la diferencia entre estilos imperativos y declarativos, pero todavía no hay una dirección clara en la implementación.",
              "Demuestra soltura pasando de un estilo/paradigma a otro (por ejemplo reemplazando iteración con recursión o abstrayendo control de flujo, ...).",
              "Demuestra soltura y profundidad con diferentes convenciones y paradigmas (imperativo/declarativo, oop/funcional). Se adapta a paradigma sin problema. Entiende los principios de cada paradigma así como sus \\"vocabularios\\".",
            ],
            "order": 2,
            "title": "Patrones/Paradigmas",
          },
        ],
        "title": "Computer Science (CS)",
      },
      Object {
        "children": Array [],
        "id": "scm",
        "order": 1,
        "parent": "frontEnd",
        "skills": Array [
          Object {
            "bc": 3,
            "category": "scm",
            "cc": 2,
            "core": true,
            "description": "Manejo/admistración de código fuente (versiones).",
            "id": "git",
            "levels": Array [
              "Uso básico de git (clone, commit, push, pull). Usa .gitignore y configura usuario (email, username).",
              "Escribe mensajes de log informativos. Organiza sets de cambios de forma lógica.",
              "Demuestra familiaridad con manejo de ramas, enviando, revisando e integrando (merging) pull requests.",
              "Branches/Tags. Usa \\"feature branches\\", \\"release branches\\", \\"develop branch\\", ...siguiendo un flujo de tipo Git Flow y tags para releases.",
              "Demuestra un nivel avanzado de resolución de conflictos, manejo de historia de un projecto, rebase, squash, ...",
            ],
            "order": 0,
            "title": "Git",
          },
          Object {
            "bc": 3,
            "category": "scm",
            "cc": 2,
            "core": false,
            "description": "Colaboración en GitHub",
            "id": "github",
            "levels": Array [
              "Usa un servicio remoto para alojar sus repositorios. Usa GitHub pages o similar para desplegar sitios estáticos. Está familiarizada con los issues.",
              "Usa issues para reportar problemas, sugerir features, hacer preguntas, ... Organiza issues en milestones, usa labels, asigna issues, ...",
              "Hace code review (aprueba, rechaza, comentarios, ...). Integra cambios entre forks/ramas.",
              "Resuelve y/o previene conflictos. Usa sistema de releases de GitHub (en conjunción con los tags de git).",
              "Usa Continuos integration (ie: Travis, Coveralls, ...) para correr tests de forma automatizada.",
            ],
            "order": 1,
            "title": "GitHub",
          },
        ],
        "title": "Source Code Management (SCM)",
      },
      Object {
        "children": Array [],
        "id": "js",
        "order": 2,
        "parent": "frontEnd",
        "skills": Array [
          Object {
            "bc": 3,
            "category": "js",
            "cc": 2,
            "core": true,
            "description": "Conoce y usa guías de estilo.",
            "id": "jsStyle",
            "levels": Array [
              "No sigue un estilo específico. Falta linter (o lo ignora).",
              "Incluye linter y configuración, pero implementación no pasa. Contiene múltiples errores y warnings (más de 10).",
              "Incluye linter. Implementación \\"casi\\" pasa (entre 1 y 10 errores). Sigue estilos en líneas generales pero todavía contiene algunos errores y warnings.",
              "Incluye linter. Implementación pasa. Sigue estilos. Sin errores de linter (todavía algunos warnings).",
              "Incluye linter, demuestra haber evaluado y elegido configuración de linter. Implementación pasa limpia.",
            ],
            "order": 0,
            "title": "Estilo (linter js)",
          },
          Object {
            "bc": 3,
            "category": "js",
            "cc": 3,
            "core": true,
            "description": "Uso de identificadores con semántica y siguiendo convenciones.",
            "id": "jsSemantics",
            "levels": Array [
              "No usa identificadores descriptivos.",
              "Usa identificadores descriptivos, pero de forma inconsitente. Algunos nombres son crípticos o inconsistentes.",
              "Usa nombres de identificadores (variables, funciones, archivos, carpetas, ...) descriptivos.",
              "Todo lo anterior, y además usa identificadores en inglés (correctamente).",
              "Propone y articula una semántica consistente y efectiva para describir los componentes de la aplicación y sus interacciones.",
            ],
            "order": 1,
            "title": "Nomenclatura / semántica",
          },
          Object {
            "bc": 4,
            "category": "js",
            "cc": 2,
            "core": true,
            "description": "Organiza y divide su código en unidades lógicas con superficies de contacto y responsabilidades claras.",
            "id": "modularity",
            "levels": Array [
              "Organiza su código en funciones, unidades lógicas",
              "Organiza su código en archivos, carpetas y funciones dividiendo responsabilidades.",
              "Organiza su código en funciones y objetos con dependencias claras/explícitas, aisladas y orientadas a ser testeadas.",
              "Divide su código en \\"módulos\\" y usa un bundler para importar/exportar.",
              "Diseña interfaces minimizando superficie de contacto. Usa sistemas de módulos tanto CommonJS como módulos de ES6",
            ],
            "order": 2,
            "title": "Uso de funciones / modularidad",
          },
          Object {
            "bc": 3,
            "category": "js",
            "cc": 2,
            "core": false,
            "description": "Uso de estructuras de datos para representar y solucionar problemas.",
            "id": "dataStructures",
            "levels": Array [
              "No organiza la data como representación de estado y relaciones.",
              "Utiliza objetos y arreglos para agrupar data. Demuestra un nivel mínimo de \\"modelado\\" de datos.",
              "Usa objetos y arreglos de forma avanzada (idiomática) y conoce patrones para recorrer estructuras y manipularlas.",
              "Hace uso de estructuras complejas como sets, maps, árboles, pilas, colas, ...",
              "Implementa sus propias estructuras de datos basadas en patrones conocidos.",
            ],
            "order": 3,
            "title": "Estructuras de datos",
          },
          Object {
            "bc": 3,
            "category": "js",
            "cc": 2,
            "core": true,
            "description": "Desarrollo orientado a pruebas, cobertura, mantenibilidad.",
            "id": "jsTesting",
            "levels": Array [
              "No demuestra enfoque orientado a tests. Código no testeable.",
              "Demuestra un mínimo de orientación hacia tests, pero sólo una pequeña parte del código es testeable y/o incluye tests.",
              "Aplica TDD como concepto. Imagina el flujo del usuario en la interacción con el programa. Posibles usos y errores al usar el programa.",
              "Demuestra código orientado a tests, coverage alto, incluye casos de error.",
              "Test suite comprensiva. Múltiples entornos. Automatizado.",
            ],
            "order": 4,
            "title": "Tests",
          },
        ],
        "title": "JavaScript",
      },
      Object {
        "children": Array [],
        "id": "html",
        "order": 3,
        "parent": "frontEnd",
        "skills": Array [
          Object {
            "bc": 3,
            "category": "html",
            "cc": 3,
            "core": true,
            "description": "Pasa o no validador de HTML: https://validator.w3.org/",
            "id": "htmlValidation",
            "levels": Array [
              ">10 errores",
              "Entre 4 y 10 errores.",
              "Entre 1 y 3 errores.",
              "0 errores, <10 warnings",
              "0 errores, 0 warnings",
            ],
            "order": 0,
            "title": "Correctitud / Validación",
          },
          Object {
            "bc": 3,
            "category": "html",
            "cc": 3,
            "core": false,
            "description": "HTMLHint Ver: https://github.com/yaniswang/HTMLHint",
            "id": "htmlStyle",
            "levels": Array [
              ">10 errores",
              "Entre 4 y 10 errores.",
              "Entre 1 y 3 errores.",
              "0 errores, <10 warnings",
              "0 errores, 0 warnings",
            ],
            "order": 1,
            "title": "Estilo (linter html)",
          },
          Object {
            "bc": 4,
            "category": "html",
            "cc": 2,
            "core": true,
            "description": "Arquitectura de información: Cómo se organiza la información para que esta tenga un sentido lógico.",
            "id": "htmlSemantics",
            "levels": Array [
              "Markup no refleja semántica",
              "Markup refleja semántica y arquitectura de información, pero todavía con insconsistencias.",
              "Uso de HTML semántico.",
              "Hace uso semántico con HTML5",
              "Arquitectura ideal. Sin estilos se debe entender todo el contenido (arquitectura), y semántica de marcado.",
            ],
            "order": 2,
            "title": "Semántica / Arquitectura de información",
          },
          Object {
            "bc": 4,
            "category": "html",
            "cc": 3,
            "core": true,
            "description": "Abstracción, reuso y jerarquía de estilos.",
            "id": "cssDry",
            "levels": Array [
              "Estilos inline... omg!",
              "Contiene estilos duplicados/redundantes.",
              "Abstrae y reusa estilos a través de clases.",
              "Hace buen uso de estilos en cascada para reusar estilos de forma jerérquica.",
              "Usa herramientas de pre-procesado de CSS o estilos con JavaScript para mayor flexibilidad y escalabilidad de estilos.",
            ],
            "order": 3,
            "title": "DRY (CSS)",
          },
          Object {
            "bc": 4,
            "category": "html",
            "cc": 2,
            "core": true,
            "description": "Diseño adaptable a diferentes dispositivos (desktop, mobile, tablet, ...)",
            "id": "cssResponsive",
            "levels": Array [
              "No es responsive",
              "Responsive con issues",
              "Responsive",
              "Mobile first",
              "Progressive web app",
            ],
            "order": 4,
            "title": "Responsive Web Design",
          },
        ],
        "title": "HTML/CSS",
      },
    ],
    "id": "frontEnd",
    "order": 1,
    "skills": Array [],
    "title": "Habilidades Técnicas (Front-end)",
  },
  Object {
    "children": Array [],
    "id": "ux",
    "order": 2,
    "skills": Array [
      Object {
        "bc": "TBD",
        "category": "ux",
        "cc": 3,
        "core": true,
        "description": "Capacidad para poder crear productos pensando y entendiendo a los usuarios finales.",
        "id": "userCentricity",
        "levels": Array [
          "Diseña el producto basado en su propia experiencia - \\"self-driven design\\". No entiende ni tiene en cuenta al usuario.",
          "Conoce sobre UX y sabe que el usuario es importante. Reflexiona sobre los objetivos del usuario y del producto, pero no \\"sale a la calle\\" (no se acerca al usuario). Los usuarios a quienes entrevista o con quienes realiza prueba no son un reflejo de su público objetivo.",
          "Se enfoca en la investigación. Entiende al usuario a través de la investigación, realiza entrevistas, observación y testings con usuarios de su público objetivo.",
          "Toma en cuenta al usuario en todo el proceso de diseño desde research hasta testing. Estos usuarios son parte  del público objetivo del producto en el cuál trabaja.",
          "Toma en cuenta al usuario en todo el proceso de diseño desde research hasta testing, y los incluye al momento de definir los KPIs de su producto.",
        ],
        "order": 0,
        "title": "User centricity",
      },
      Object {
        "bc": "TBD",
        "category": "ux",
        "cc": 2,
        "core": true,
        "description": "Pone en práctica los principios de diseño visual en los componentes de su producto y en la relación de estos con los otros componentes. El diseño propuesto como un todo se entiende de manera clara.",
        "id": "visualDesign",
        "levels": Array [
          "No entiende ni aplica los principios de visual design.",
          "Entiende que hay conceptos como: contraste, alineación, jerarquía, tipografía y color para crear composiciones. Si bien no las aplica todas, pero se ve un esfuerzo por implementar algunos.",
          "Aplica la mayoría de conceptos de manera adecuada por separado. Y en conjunto algunos puede que no tengan 100% armonía, pero se ve el fuerte trabajo por seguirlos y aplicarlos casi en su totalidad. La página se percibe fuertemente homogenea en estilos.",
          "Pueden criticar una interfaz basándose en los fundamentos de diseño visual y en buenas prácticas. Construye interfaces utilizando como base una librería de componentes o guía de estilo siguiendo, también, las mejores prácticas de diseño visual, usabilidad y accesibilidad.",
          "Entiende y pone en práctica las mejores prácticas de Visual Design. Implementa las normas básicas de accesibilidad y las heurísticas usabilidad.",
        ],
        "order": 1,
        "title": "Visual Design",
      },
    ],
    "title": "Habilidades Técnicas (UX)",
  },
  Object {
    "children": Array [
      Object {
        "children": Array [],
        "id": "selfManagement",
        "order": 0,
        "parent": "soft",
        "skills": Array [
          Object {
            "bc": 4,
            "category": "selfManagement",
            "cc": 2,
            "core": true,
            "description": "Planifica y organiza el trabajo de manera priorizada, incremental e iterativa, aprovechando su tiempo y utilizando herramientas que la ayuden a lograrlo. Demuestra tener un prototyping mindset.",
            "id": "softPlanning",
            "levels": Array [
              "No planifica y/o no gestiona su tiempo",
              "Logra organizarse de manera general, sin un plan específico, haciendo una estimación muy general del tiempo.

Conoce las ceremonias y artefactos ágiles (sprint planning, dailys, retrospectiva, tablero al menos, etc) pero los omite y/o no las utiliza de manera adecuada.",
              "Escribe como historias de usuario y las prioriza en función del valor de negocio/usuario y de las dependencias entre sí.

Escribe definiciones de terminado para cada historia de usuario del product backlog.

Cumple, casi siempre, con las ceremonias y mantiene su tablero actualizado.

No pierde tiempo en tareas con menor relevancia para el produto/usuario.",
              "Escribe como historias de usuario y las prioriza en función del valor de negocio/usuario y de las dependencias entre sí.

Escribe definiciones de terminado para  cada historia de usuario  del product backlog.

Cumple siempre con las ceremonias y con mantener su tablero actualizado.

No pierde tiempo en tareas con menor relevancia para el produto/usuario, logrando gestionar su tiempo.

Hace estimaciones en \\"puntos\\" usando como referencia otras tareas ya conocidas (\\"planning poker\\").",
              "Escribe como historias de usuario y las prioriza en función del valor de negocio/usuario y de las dependencias entre sí.

Escribe definiciones de terminado para  cada historia de usuario  del product backlog.

Cumple siempre con las ceremonias y con mantener su tablero actualizado.

No pierde tiempo en tareas con menor relevancia para el produto/usuario, logrando gestionar su tiempo.

Hace estimaciones con precisión y, por  lo tanto, planificar \\"releases\\" o entregas parciales con comodidad.",
            ],
            "order": 0,
            "title": "Planificación, organización y manejo del tiempo",
          },
          Object {
            "bc": 4,
            "category": "selfManagement",
            "cc": 2,
            "core": true,
            "description": "Tiene interés en adquirir nuevos conocimientos de manera autónoma, encuentra los medios para hacerlo, y lo intenta hasta lograrlo.",
            "id": "selfLearning",
            "levels": Array [
              "No demuestra adquiere conocimientos de manera autónoma, no realiza preguntas sobre el material, ni busca aclarar conceptos.",
              "Demuestra interés en adquirir conocimientos autónomamente, estudiando de manera independiente, lo que se puede reflejar en que cuando es necesario busca aclarar conceptos y resolver dudas sobre la materia.",
              "Adquiere de forma constante conocimientos de manera independiente y responsable. Pide referencia de materiales que pueden ser de utilidad para su aprendizaje. Además, cuando es necesario, realiza preguntas sobre la materia. Busca resolver dudas sobre temáticas más allá de las vistas en clase.",
              "Adquiere de forma constante conocimientos de manera independiente y responsable. Es capaz de identificar por su cuenta herramientas que necesita aprender o también reforzar. Pide referencia de materiales que pueden ser de utilidad para su aprendizaje. Además, cuando es necesario, realiza preguntas sobre la materia. Busca resolver dudas sobre temáticas más allá de las vistas en clase.",
              "Adquiere de forma constante conocimientos de manera independiente y responsable. Es capaz de identificar por su cuenta herramientas que necesita aprender o también reforzar. Pide referencia de materiales que pueden ser de utilidad para su aprendizaje. Además, cuando es necesario, realiza preguntas sobre la materia. Busca resolver dudas sobre temáticas más allá de las vistas en clase. Le agregan a sus proyectos herramientas fuera de lo visto en clase o lo pedido y que le agregaran valor al producto.",
            ],
            "order": 1,
            "title": "Autoaprendizaje",
          },
          Object {
            "bc": 4,
            "category": "selfManagement",
            "cc": 2,
            "core": true,
            "description": "Usar estrategias apropiadas para hablar en público, incluida la interacción con medios de presentación, como es el demo, para asegurar el entendimiento de la audiencia y la mejor forma de presentar el proyecto.",
            "id": "presentations",
            "levels": Array [
              "No logra presentar el demo según requisitos del reto: no se ve bien, no se abre el link pedido, solo se ve en su computador local, etc. y/o No realiza contacto visual y el volumen de voz es bajo o utiliza un ritmo no adecuado, lo que hace difícil entender el contenido de la presentación.",
              "Cualquier persona puede acceder al demo desde cualquier equipo. Habla con un tono y ritmo adecuado pero no realiza contacto visual o realiza contacto visual con la audiencia pero habla en un volumen bajo o en un ritmo no adecuado, lo que dificulta el entendimiento de la presentación.",
              "Cualquier persona puede acceder al demo desde cualquier equipo. El demo se ve y funciona correctamente, logrando priorizar qué mostrar en el demo -pudiendo enseñar algunas veces menos elementos pero funcionales-. Realiza algún contacto visual con la audiencia, se apropia del espacio físico y habla con un volumen y ritmo que no interfieren con el entendimiento de la audiencia.",
              "Cualquier persona puede acceder al demo desde cualquier equipo. El demo se ve y funciona correctamente, teniendo al menos una funcionalidad principal que está perfecta y pequeñas funcionalidades anexas que funcionan correctamente. Realiza contacto visual regular con la audiencia, se apropia del espacio físico y habla con un volumen y ritmo que no interfieren con el entendimiento de la audiencia, e incluso capta su atención.",
              "Cualquier persona puede acceder al demo desde cualquier equipo. El demo se ve y funciona correctamente, teniendo una funcionalidad principal y varias sub funcionalidades que están perfectas. Además eligen el mejor medio para mostrar el demo. Realiza contacto visual regular con la audiencia, se apropia adecuadamente del espacio físico y habla con un volumen y ritmo que propician el entendimiento de la audiencia y capta su atención.",
            ],
            "order": 2,
            "title": "Presentaciones",
          },
          Object {
            "bc": 4,
            "category": "selfManagement",
            "cc": 2,
            "core": true,
            "description": "Se adapta a situaciones nuevas con actitud positiva. Lidia con la incertidumbre proponiendo soluciones creativas y cambia de estrategia cuando se necesita. Asume retos, afronta cambios repentinos, se adecua a trabajar con nuevos equipos, etc",
            "id": "adaptability",
            "levels": Array [
              "Ante cambios o nuevos desafíos se adapta pero no mantiene una actitud positiva/ No logra adaptarse ante situaciones nuevas o a la incertidumbre.",
              "Ante cambios o nuevos desafíos los recibe con una actitud positiva, pero no necesariamente logra accionarlos o adaptarse de la mejor manera, es decir, no planifica nuevamente o no puede integrar los cambios en lo planificado.",
              "Ante cambios inesperados o nuevos desafios los recibe con una actitud positiva, se adapta y logra proponer soluciones creativas para encontrar una nueva estrategia. De esta manera, logra asumir retos, enfrenta los cambios repentinos, como trabajar con nuevos equipos o cambios en el proyecto.",
              "Navega ante la incertidumbre, siendo capaz de reconocer y alimentar la incomodidad de no saber, y luego idear tácticas para salir de ella cuando sea necesario. Ante cambios inesperados o nuevos desafios los recibe con una actitud positiva, se adapta y logra proponer soluciones creativas para encontrar una nueva estrategia. Logra asumir retos, enfrenta los cambios repentinos, como trabajar con nuevos equipos o cambios en el proyecto. Logra realizar un analisis \\"post mortem\\" o retrospectiva, donde logra ver que es lo que salío mal e identifica posibles mejores",
              "Navega ante la incertidumbre, siendo capaz de reconocer y alimentar la incomodidad de no saber, y luego idear tácticas para salir de ella cuando sea necesario. Ante cambios inesperados o nuevos desafios los recibe con una actitud positiva, se adapta y logra proponer soluciones creativas para encontrar una nueva estrategia. Logra asumir retos, enfrenta los cambios repentinos, como trabajar con nuevos equipos o cambios en el proyecto.  Realizar un analisis \\"post mortem\\"; ve lo que salío mal e identificar posibles mejores. Además, realiza un análisis \\"pre-mortem\\", asume que puede pasar algo inesperado y lo maneja de la mejor forma posible, cambiando su función para estar alineada con los requisitos del entorno (proyecto, salón de clases, etc).",
            ],
            "order": 3,
            "title": "Adaptabilidad",
          },
          Object {
            "bc": 4,
            "category": "selfManagement",
            "cc": 2,
            "core": true,
            "description": "Tiene la disposición de buscar y encontrar soluciones a problemas de diversa complejidad y naturaleza, evitando quedarse estancada y apoyando a su equipo en el camino.",
            "id": "problemSolving",
            "levels": Array [
              "No intenta buscar alternativas ante problemas que se presentan.",
              "Busca soluciones alternativas a problemas de mediana complejidad. Depende de otros para comenzar a resolver un problema.",
              "Comienza a aplicar su propia creatividad para resolver problemas independentiemente. Busca soluciones alternativas a problemas de diversa complejidad, a pesar de que no todas las soluciones puedan ser correctas, consulta distintas fuentes para resolver el problema.",
              "Busca soluciones alternativas utilizando su propia creatividad para resolver problemas de diversa complejidad y naturaleza. Al consultar diferentes fuentes y no encontrar una solución, recurre a los demás para encontrar una forma de resolver el problema o también busca soluciones a través de experimentación e iteracíon -busca \\"salir del edificio\\" como una herramienta para \\"resolver\\" el problema-.",
              "Busca soluciones alternativas utilizando su propia creatividad para resolver problemas de diversa complejidad y naturaleza. Logra pedir ayuda a tiempo y recurre a los demás para encontrar una forma de resolver el problema de manera colaborativa. Demuestra experimentación e iteración dentro del proceso de solución de problemas. No solo experimenta con el problema, si no también piensa criticamente sobre él - es decir, cuestiona como se conecta \\"x problema\\" a otros y encuentra soluciones, nuevos procesos, técnicas, etc. Para poder resolver un grupo entero de \\"problemas,\\" influye a los demás y trabaja en equipo para lograrlo.",
            ],
            "order": 4,
            "title": "Solución de problemas",
          },
        ],
        "title": "Habilidades de Autogestión",
      },
      Object {
        "children": Array [],
        "id": "interpersonalRelationships",
        "order": 1,
        "parent": "soft",
        "skills": Array [
          Object {
            "bc": 4,
            "category": "interpersonalRelationships",
            "cc": 2,
            "core": true,
            "description": "Trabajo en equipo: ofrece ayuda a sus compañeras, coordina sus actividades con su grupo y trabaja por el objetivo común de su equipo",
            "id": "teamWork",
            "levels": Array [
              "No trabaja colaborativamente",
              "Trabaja de manera colaborativa con el equipo.",
              "Trabaja de manera colaborativa y contribuye al objetivo común, entregando ideas para la construcción del proyecto.",
              "Trabaja de manera colaborativa y contribuye al objetivo común, entregando ideas para la construcción del producto, respetando siempre el trabajo de sus compañeras.",
              "Trabaja de manera colaborativa y contribuye al objetivo común, entregando ideas para la construcción del producto, respetando siempre el trabajo de sus compañeras.                                                                                                                                                                                                                              Se preocupa del proceso de aprendizaje del equipo, generando un ambiente colaborativo entre sus compañeras. Por ejemplo. ofrece ayuda a sus compañeras, hace preguntas a sus compañeras respecto a su proceso, anima a su grupo, etc.",
            ],
            "order": 0,
            "title": "Trabajo en equipo",
          },
          Object {
            "bc": 4,
            "category": "interpersonalRelationships",
            "cc": 2,
            "core": true,
            "description": "Responsabilidad: cumple con entregar su trabajo a tiempo y ayuda a los demás con lo que tengan pendiente.",
            "id": "responsibility",
            "levels": Array [
              "No cumple con sus responsabilidades o si las cumple es fuera del tiempo acordado",
              "Entrega su trabajo a tiempo",
              "Entrega su trabajo a tiempo y colabora con el objetivo final del trabajo, con el fin de entregar un producto de calidad.",
              "Entrega su trabajo a tiempo y colabora con el objetivo final del trabajo, ayudando a los demás con los pendientes, con el fin de entregar un producto de calidad.",
              "Entrega su trabajo a tiempo y colabora con el objetivo del trabajo, ayudando a los demás con los pendientes, con el fin de entregar un producto de calidad. Encuentra alternativas de acción cuando es necesario, para llegar con el producto a tiempo.",
            ],
            "order": 1,
            "title": "Responsabilidad",
          },
          Object {
            "bc": 4,
            "category": "interpersonalRelationships",
            "cc": 2,
            "core": true,
            "description": "Escucha y valora los comentarios y críticas de los demás, rescatando los aspectos que la ayuden a incorporar mejoras. Da su opinión de manera fundamentada, constructiva y coherente. Promueve sesiones de feedback con su equipo, aporta puntual y objetivamente en retrospectivas. Code review (hace y recibe)",
            "id": "feedback",
            "levels": Array [
              "No escucha o rechaza los comentarios y criticas de los demás, y/o no entrega su opinión o si lo hace no es de manera constructiva.",
              "Escucha los comentarios y críticas de los demás de manera respetuosa, pero no logra accionar el feedback. y/o entrega a los demás su opinión de forma constructiva, pero no necesariamente resulta útil para los otros.",
              "Escucha y valora los comentarios y críticas de los demás, rescatando aspectos que le sirvan para su mejora. Además, entrega su opinión a los demás de forma constructiva, fundamentada y coherente con el fin de ayudar a los demás.",
              "Escucha y valora los comentarios y críticas de los demás, rescatando aspectos que le sirvan para su mejora. Además, busca instancias de feedback o peer review, entregando su opinión a los demás de forma constructiva, fundamentada y coherente con el fin de ayudar a los otros. Reconoce que el feedback es un regalo, por lo tanto es honesto, empático e inmediato.",
              "Escucha y valora los comentarios y críticas de los demás, rescatando aspectos que le sirvan para su mejora. Logra gestionar el feedback y realizar acciones para el cambio. Además, entrega su opinión a los demás de forma constructiva, fundamentada y coherente. Reconoce que el feedback es un regalo, por lo tanto es honesto, empático e inmediato. Participa de retrospectivas, feedbacks y peer review de forma constante, aportando de manera puntual y objetiva, generando un aporte positivo para su entorno de trabajo.",
            ],
            "order": 2,
            "title": "Dar y recibir feedback",
          },
          Object {
            "bc": 4,
            "category": "interpersonalRelationships",
            "cc": 2,
            "core": true,
            "description": "Tiene capacidad de síntesis y articular sus ideas con claridad. Entiende a su audiencia y logra que se entienda lo que quiere comunicar facilitando el diálogo.",
            "id": "communication",
            "levels": Array [
              "No logra comunicar de manera eficaz, ya sea porque no logra comunicar sus ideas o si las comunica no lo hace de manera clara",
              "Logra comunicar sus ideas a los demás cuando es necesario, pero no fomenta instancias de comunicación",
              "Logra comunicar sus ideas a los demás, teniendo capacidad de síntesis y articulando sus ideas con claridad.",
              "Logra comunicar sus ideas a los demás, teniendo capacidad de síntesis y articulando sus ideas con claridad. Entiende a su audiencia o equipo y logra que se entienda lo que quiere comunicar facilitando el diálogo",
              "Logra comunicar sus ideas a los demás, teniendo capacidad de síntesis y articulando sus ideas con claridad. Entiende a su audiencia o equipo y logra que se entienda lo que quiere comunicar facilitando el diálogo. Además, mantiene una comunicación constante y fluida con el resto, facilitando el trabajo y las relaciones en este.",
            ],
            "order": 3,
            "title": "Comunicación eficaz",
          },
        ],
        "title": "Habilidades para relaciones interpersonales",
      },
    ],
    "id": "soft",
    "order": 3,
    "skills": Array [],
    "title": "Habilidades Blandas (Soft Skills)",
  },
]
`;
